extends layout

include includes/mixins.pug

block content
  +project(
    '../assets/images/largeImages/barsvp_big.jpg',
    'BaRSVP',
    'Nightlife Coordination App',
    'https://barsvp.herokuapp.com/',
    'https://github.com/kevinnorris/nightlifeCoordinator'
  )
    p
      | This project implements the lessons I learned from building the voting app. I switched to a feature-based 
      | file architecture and 
      a(href='https://github.com/erikras/ducks-modular-redux') Ducks
      | as well as used the 
      a(href='https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0') container/component architecture 
      | to split the logic and presentational aspects of the app. This made it much easier to alter and reuse 
      | components. To build this project I first updated the architecture of 
      a(href='/boilerplate.html') my boilerplate 
      | and then utilized the boilerplate as a starting point.

    p
      | For this project, data about bars and restaurants needed to be shown based on the user-provided locations. 
      | This was done by leveraging the 
      a(href='https://www.yelp.com/developers/documentation/v2/overview') Yelp API
      | . Combining the data provided by the Yelp API with the app’s 
      | own data about users attendance provided a fun and interesting challenge. 
    p 
      | The application stores businesses by name and the ID’s of the users attending them along with an 
      |expiration date. When a user searches, the Yelp API is queried, and then the resulting response is combined 
      | with the application’s data on user attendance, based on the businesses’ name. 
    p
      | Local authentication was also implemented for this project using Passport JS.
    hr
    p 
      | This project was built with my 
      a(href='/boilerplate.html') fullstack boilerplate
      | .
